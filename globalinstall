#! /bin/bash 

dir=$(pwd)

installBasicComponents () {
  apt-get install -y curl dkms build-essential cmake cmake-data openssh-server alsa-utils
  sed --in-place s/us/fr/g /etc/default/keyboard
}

installDevUtils () {
  sudo apt-get install stow zsh zsh-antigen ranger silversearcher-ag -y 
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install --key-bindings --completion --no-update-rc --xdg --no-bash

  # install madge & diff-so-fancy
  npm i -g madge diff-so-fancy tsserver

  # Install ctags 
  sudo git clone https://github.com/romainl/ctags-patterns-for-javascript.git /opt/jsctags

  # install bat
  wget https://github.com/sharkdp/bat/releases/download/v0.12.1/bat-musl_0.12.1_amd64.deb -O /tmp/bat.deb
  sudo dpkg -i /tmp/bat.deb

  # install zsh plugins manager
  curl -L git.io/antigen > /usr/local/bin/antigen

  # install fonts
  sudo cp ~/dotfiles/fonts/* /usr/share/fonts
  fc-cache -fv

  # install ctags
  git clone https://github.com/universal-ctags/ctags /tmp/ctags
  cd /tmp/ctags && ./autogen.sh && ./configure && make && sudo make install
}

installDevEnvironment () {
  # For git madge
  apt-get install -y jq graphviz

  # virtual box
  # wget https://download.virtualbox.org/virtualbox/6.0.0/virtualbox-6.0_6.0.0-127566~Debian~stretch_amd64.deb -O /tmp/virtualbox.deb
  # dpkg -i /tmp/virtualbox.deb
  # /sbin/vboxconfig

  # Slack
  # wget https://downloads.slack-edge.com/linux_releases/slack-desktop-3.3.3-amd64.deb -O /tmp/slack.deb
  # dpkg -i /tmp/slack.deb

  apt-get install -y --fix-broken
  apt-get install -y openvpn htop

  ln -sf $dir/init.d/openvpncustom /etc/init.d/openvpncustom
  update-rc.d openvpncustom defaults

  # install hub
  wget https://github.com/github/hub/releases/download/v2.12.8/hub-linux-amd64-2.12.8.tgz -O /tmp/hub.tar.gz
  mkdir -p /tmp/hub && tar -zxvf /tmp/hub.tar.gz -C /tmp/hub --strip-components=1
  cd /tmp/hub && ./install

  cd /tmp
  # install git madge
  hub clone jez/git-madge
  cp /tmp/git-madge/git-madge /usr/bin/git-madge
  chmod a+x /usr/bin/git-madge

  # Generate a ssh private key to link it to github repos
  ssh-keygen -t rsa -b 4096 -C "maxi.bertrand@gmail.com"
}

installCustomEnvironment () {
  # Install nvm
  wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

  apt-get install -y libcairo2-dev libxcb1-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-randr0-dev libxcb-util0-dev libxcb-xkb-dev pkg-config python-xcbgen xcb-proto libxcb-xrm-dev libasound2-dev libmpdclient-dev libiw-dev libcurl4-openssl-dev libpulse-dev libxcb-keysyms1-dev libpango1.0-dev libxcb-util0-dev xcb libxcb1-dev libxcb-icccm4-dev libyajl-dev libev-dev libxcb-xkb-dev libxcb-cursor-dev libxkbcommon-dev libxcb-xinerama0-dev libxkbcommon-x11-dev libstartup-notification0-dev libxcb-randr0-dev libxcb-xrm0 libxcb-xrm-dev libxcb-composite0-dev sudo
  apt-get install -y chromium xfonts-base xserver-xorg-input-all xinit xserver-xorg xserver-xorg-video-all cargo tig feh vim-nox tmux compton suckless-tools xclip nodejs bison flex
  apt-get install -y dbus-x11 libdbus-1-dev libx11-dev libxinerama-dev libxrandr-dev libxss-dev libglib2.0-dev libpango1.0-dev libgtk-3-dev libxdg-basedir-dev dirmngr ffmpeg x11-apps librsvg-2 mpc

  # Install spotify
  # sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
  # echo deb http://repository.spotify.com stable non-free | tee /etc/apt/sources.list.d/spotify.list
  # apt-get update
  # apt-get install -y spotify-client

  # Install Chrome
  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O /tmp/chrome.deb
  dpkg -i /tmp/chrome.deb

  apt-get install -y --fix-broken

  # Install dunst
  git clone https://github.com/dunst-project/dunst.git /tmp/dunst
  cd /tmp/dunst
  make
  make install

  # Install rofi
  git clone https://github.com/dunst-project/dunst.git /tmp/rofi
  cd /tmp/rofi
  mkdir build && cd build
  ../configure --disable-check
  make && make install

  # Install rust
  cd /tmp
  apt-get remove rustc -y
  curl https://sh.rustup.rs -sSf | sh
  source $HOME/.cargo/env
  rustup override set stable
  rustup update stable

  # Install alacritty
  git clone https://github.com/jwilm/alacritty.git alacritty-git
  cd alacritty-git
  git checkout v0.2.1
  cargo build --release
  mv target/release/alacritty /usr/bin
  chmod a+x /usr/bin/alacritty
  rm -rf alacritty-git

  cd $pwd

  # install i3 gaps
  cd /tmp
  git clone https://www.github.com/Airblader/i3 i3-gaps
  cd i3-gaps
  git checkout gaps-next && git pull
  autoreconf --force --install
  rm -rf build
  mkdir build
  cd build
  ../configure --prefix=/usr --sysconfdir=/etc
  make && make install

  # install polybar
  git clone https://github.com/jaagr/polybar.git /tmp/polybar
  cd /tmp/polybar && ./build.sh
  cd ~

  # install i3lock color
  # sudo apt install autoconf gcc make pkg-config libpam0g-dev libcairo2-dev libfontconfig1-dev libxcb-composite0-dev libev-dev libx11-xcb-dev libxcb-xkb-dev libxcb-xinerama0-dev libxcb-randr0-dev libxcb-image0-dev libxcb-util0-dev libxcb-xrm-dev libxcb-xtest0-dev libxkbcommon-dev libxkbcommon-x11-dev libjpeg-dev
  # git clone https://github.com/PandorasFox/i3lock-color.git /tmp/i3lock-color
  # cd /tmp/i3lock-color
  # autoreconf --force --install
  # mkdir -p build && cd build/
  # ../configure \
  #   --prefix=/usr \
  #   --sysconfdir=/etc \
  #   --disable-sanitizers
  #       make

  # mv recdsk utility
  cp recdsk /usr/bin
  chmod +x /usr/bin/recdsk
}

# step up in the game
vim () {
  apt-get remove vim vim-common vim-tiny vim-runtime neovim neovim-runtime -y
  apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \
    libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \
    libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \
    python3-dev ruby-dev lua5.1 liblua5.1-dev libperl-dev git checkinstall -y

  cd /tmp
  git clone https://github.com/vim/vim.git
  cd vim
  ./configure --with-features=huge \
    --enable-fail-if-missing \
    --enable-multibyte \
    --enable-rubyinterp=yes \
    --enable-python3interp=dynamic \
    --with-x \
    --with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \
    --enable-perlinterp=yes \
    --enable-luainterp=yes \
    --enable-cscope \
    --prefix=/usr/local

  make VIMRUNTIMEDIR=/usr/local/share/vim/vim81

  checkinstall

  update-alternatives --install /usr/bin/editor editor /usr/local/bin/vim 1
  update-alternatives --set editor /usr/local/bin/vim 
  update-alternatives --install /usr/bin/vi vi /usr/local/bin/vim 1
  update-alternatives --set vi /usr/local/bin/vim 
}

usage () {
  echo 'Usage: '$0' [-v] [-a] [-d] [-c] [-u]' 1>&2;exit 1;
}

while getopts :avdcu opt; do
  case "${opt}" in
    a) 
      installBasicComponents
      installDevEnvironment
      installDevUtils
      installCustomEnvironment
      vim
      ;;
    u) 
      installDevUtils
      ;;
    d) 
      installDevEnvironment
      ;;
    v) 
      vim
      ;;
    c) 
      installCustomEnvironment
      ;;
    *)
      usage
      ;;
  esac
done
