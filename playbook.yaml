---
- hosts: localhost
  become: yes
  tasks:
    - name: Swap keyboard layout
      replace:
        path: /etc/default/keyboard
        regexp: 'us'
        replace: 'fr'
    - name: Install core
      apt:
        name:
          - dkms 
          - build-essential 
          - cmake 
          - cmake-data 
          - openssh-server 
          - alsa-utils
          - autoconf
          - procps
          - file
          - isenkram-cli
          - network-manager
    - name: Add monzey to sudoers
      shell: echo "monzey  ALL=(ALL) NOPASSWD:ALL" | tee /etc/sudoers.d/monzey
    - name: Add missing firmwares
      shell: isenkram-autoinstall-firmware
    - name: Install go
      block: 
        - name: Unarchive go
          unarchive: 
            src: https://golang.org/dl/go1.17.linux-amd64.tar.gz
            dest: /usr/local
            remote_src: yes
        - name: Source go
          shell: export PATH=/usr/local/go/bin:${PATH}
    - name: Add sid repo
      apt_repository: 
        repo: deb http://deb.debian.org/debian sid main
    - name: Add gh key
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        state: present 
    - name: Add gh ppa
      apt_repository:
        repo: deb [arch=amd64] https://cli.github.com/packages stable main
        filename: githubcli
    - name: Install dev utils
      apt:
        name:
          - stow 
          - zsh 
          - ranger 
          - silversearcher-ag 
          - openvpn
          - bat
          - gh
          - fzf
          - unzip
          - zip
          - lsd
        update_cache: yes
    - name: Install secondary deps
      apt:
        name: 
          - openresolv
          - rsync
          - wayland-protocols
          - libpam0g-dev 
          - libwayland-dev
          - libxext-dev 
          - libxcb-xfixes0-dev 
          - libxcb-shape0-dev 
          - libxcb-render-util0-dev 
          - libxcb-render0-dev 
          - libxcb-present-dev 
          - libxcb-glx0-dev 
          - libxcb-ewmh-dev 
          - libxcb-icccm4-dev 
          - libxcb-image0-dev 
          - libxcb-randr0-dev 
          - libxcb-util0-dev 
          - libxcb-xkb-dev 
          - libxcb-xrm-dev 
          - libxcb-keysyms1-dev 
          - libxcb-xinerama0-dev 
          - libxcb-xtest0-dev 
          - libxcb-composite0-dev 
          - libxcb-cursor-dev 
          - libxcb-xrm0 
          - libxcb1-dev 
          - libx11-xcb-dev 
          - libxkbcommon-dev 
          - libxkbcommon-x11-dev 
          - libxkbcommon-x11-dev 
          - libxkbcommon-dev 
          - libx11-dev 
          - libxinerama-dev 
          - libxss-dev 
          - libxdg-basedir-dev 
          - libpixman-1-dev 
          - libconfig-dev 
          - libgl1-mesa-dev 
          - libpcre2-dev 
          - libpcre3-dev 
          - libevdev-dev 
          - libasound2-dev 
          - libmpdclient-dev 
          - libiw-dev 
          - libssl-dev
          - libcurl4-openssl-dev 
          - libpulse-dev 
          - libpam0g-dev 
          - libcairo2-dev 
          - libpango1.0-dev 
          - libfontconfig1-dev 
          - libev-dev 
          - libjpeg-dev
          - libyajl-dev 
          - libstartup-notification0-dev 
          - libdbus-1-dev 
          - libglib2.0-dev 
          - librsvg2-2 
          - libnotify-dev
          - uthash-dev 
          - meson
          - pkg-config
          - xcb-proto 
          - xcb 
          - imagemagick
          - pkg-config 
          - sudo
          - chromium 
          - firefox 
          - xfonts-base 
          - xserver-xorg-input-all 
          - xinit 
          - xserver-xorg 
          - xserver-xorg-video-all 
          - cargo 
          - tig 
          - feh 
          - compton 
          - suckless-tools 
          - xclip 
          - bison 
          - flex
          - dbus-x11 
          - dirmngr 
          - ffmpeg 
          - x11-apps 
          - mpc
          - polybar
          - nscd
          - fuse
          - ninja-build
          - mpv
        update_cache: yes
    - name: Install antigen
      get_url:
        url: https://git.io/antigen
        dest: /usr/local/bin/antigen
    - name: Install nvim
      get_url:
        url: https://github.com/neovim/neovim/releases/download/v0.10.0/nvim.appimage
        dest: /usr/bin/nvim
        mode: '0655'
    - name: Add ssh directory
      file:
        path: ~/.ssh
        state: directory
        mode: '0755'
      become_user: monzey
    - name: Add ssh key
      community.crypto.openssh_keypair:
        path: ~/.ssh/id_rsa
        size: 4096
        type: rsa
        comment: maxi.bertrand@gmail.com
      become_user: monzey
    - name: Install chrome
      shell: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O chrome.deb
        dpkg -i chrome.deb
      args:
        chdir: /tmp
    - name: Clone dunst
      git:
        repo: https://github.com/dunst-project/dunst.git
        dest: /tmp/dunst
    - name: Install dunst
      shell: |
        make
        make install
      args:
        chdir: /tmp/dunst
    - name: Remove current rustc
      apt:
        name: rustc
        state: absent
    - name: Install rust
      block: 
      - name: Download rust
        shell: | 
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        args:
      - name: Copy rust to path
        copy: 
          src: /$HOME/.cargo/bin/rustc
          dest: /usr/bin/rustc
          mode: '0755'
    - name: Link cargo
      copy: 
        src: /$HOME/.cargo/bin/cargo
        dest: /usr/bin/cargo
        mode: '0755'
    - name: Install delta
      block:
        - name: Install delta globally
          shell: cargo install git-delta
        - name: Install delta for user
          copy: 
            src: /$HOME/.cargo/bin/delta
            dest: /usr/bin/delta
            mode: '0755'
    - name: Install kickoff
      block:
        - name: Install kickoff globally
          shell: cargo install kickoff
        - name: Install kickoff for user
          copy: 
            src: /$HOME/.cargo/bin/kickoff
            dest: /usr/bin/kickoff
            mode: '0755'
    - name: Install neovide
      block:
        - name: Clone neovide
          git:
            repo: https://github.com/neovide/neovide
            dest: /tmp/neovide
        - name: Build neovide
          shell: |
            cargo build --release
          args:
            chdir: /tmp/neovide
        - name: Copy neovide to path
          copy: 
            src: /tmp/neovide/target/release/neovide
            dest: /usr/bin/neovide
            mode: '0755'
    - name: Install btop
      block:
        - name: Download btop
          get_url: 
            url: https://github.com/aristocratos/btop/releases/download/v1.2.5/btop-x86_64-linux-musl.tbz 
            dest: /tmp/btop.tbz
        - name: Unarchive btop
          shell: mkdir btop && tar -xjf btop.tbz -C btop
          args:
            chdir: /tmp
        - name: Install btop exe
          shell: make install
          args:
            chdir: /tmp/btop
    - name: Install kitty
      block:
      - name: Download kitty
        shell: curl -l https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin dest=/usr/bin launch=n
      - name: Change kitty ownership
        file: 
          src: /usr/bin/kitty.app/bin/kitty
          dest: /usr/bin/kitty
          mode: '0755'
          state: link
    - name: Install ripgrep
      apt:
        deb: https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb
    - name: Install vscode
      apt:
        deb: https://az764295.vo.msecnd.net/stable/899d46d82c4c95423fb7e10e68eba52050e30ba3/code_1.63.2-1639562499_amd64.deb
    - name: Install libappindicator
      apt:
        deb: http://ftp.fr.debian.org/debian/pool/main/liba/libappindicator/libappindicator3-1_0.4.92-7_amd64.deb
    - name: Install libindicator
      apt:
        deb: http://ftp.fr.debian.org/debian/pool/main/libi/libindicator/libindicator3-7_0.5.0-4_amd64.deb
    - name: Install slack
      apt:
        deb: https://downloads.slack-edge.com/releases/linux/4.23.0/prod/x64/slack-desktop-4.23.0-amd64.deb
    - name: Recdsk
      copy:
        src: recdsk
        dest: /usr/bin/recdsk
        mode: a+x
    - name: Install fonts
      copy:
        src: "{{ item }}"
        dest: /usr/share/fonts
      with_fileglob:
        - fonts/*
    - name: Update fonts cache
      shell: fc-cache -fv
    - name: Install cursor theme
      copy:
        src: "{{ item }}"
        dest: /usr/share/icons/default
      with_fileglob:
        - cursor/*
    - name: Install VPN
      block:
        - name: Copy script to init.d
          file:
            src: "{{ playbook_dir }}/init.d/openvpncustom"
            dest: /etc/init.d/openvpncustom
            state: link
        - name: Add script to startup
          shell: update-rc.d openvpncustom defaults
    - name: Install nvm
      shell: |
        wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
      become_user: monzey
    - name: Install node 
      shell: |
        source $HOME/.nvm/nvm.sh
        nvm install {{ item }}
        nvm use {{ item }}
      args:
        executable: /bin/bash
      loop:
        - 16.13.0
      become_user: monzey
    - name: Clone dotfiles
      git:
        repo: https://github.com/monzey/dotfiles.git
        dest: $HOME/dotfiles
      become_user: monzey
    - name: Install ly
      block:
        - name: Clone ly repo
          git:
            repo: https://github.com/fairyglade/ly.git
            dest: /tmp/ly
        - name: Compile Ly
          shell: |
            make
            make install installsystemd
          args:
            chdir: /tmp/ly
        - name: Enable Ly
          shell: |
            systemctl ienable ly.service
    - name: Change chsh permissions
      replace:
        path: /etc/pam.d/chsh
        regexp: 'required'
        replace: 'sufficient'
    - name: Wrap up user install
      script: install.sh
      args:
        chdir: /home/monzey/dotfiles
      become_user: monzey
